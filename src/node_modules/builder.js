const fs = require('fs');
const { exec } = require('child_process');

var maxFileAgeMs = 30*24*60*60*1000;//up to 30 days old
var targetPath = "";
//Assume that cwd is the directory holding the source files
const targetFolder="/home/trevithj/aws-s3/build/experiment_ation_name";
const sourceFolder=fs.realpathSync("./");

function copyFile(fn) {
	var sPath = fn; //assume we are in the right folder already
	var tPath = `${targetFolder}/${targetPath}`;
	fs.access(tPath, fs.constants.W_OK, err=> {
		if(err) {
			//doExec(`mkdir ${tPath}`);
			console.log(`${err}\nTry: mkdir ${tPath}`);
		} else {
		//	console.log(`cp ${sPath} ${tPath}${fn}`);
			doExec(`cp ${sPath} ${tPath}${fn}`);
		}
	});
}

function doExec(cmd) {
	exec(cmd, (error, stdout, stderr) => {
		if (error) {
			console.error(`exec error: ${error}`);
			return;
		}
		console.log(`OK: ${stdout} ${stderr}`);
	});

}

module.exports = {

	setMaxFileAgeDays: function(d) {
		maxFileAgeMs = d*24*60*60*1000;
	},

	setMaxFileAgeHours: function(h) {
		maxFileAgeMs = h*60*60*1000;
	},

	setTargetPath: function(p) {
		targetPath = p;
	},
	doBuild: function(fileNames) {
		var age = new Date().getTime() - maxFileAgeMs;
		//console.dir(fs.realpathSync("./"));
		fileNames.forEach(fn => {
			//var sPath = `${sourceFolder}/${targetPath}${fn}`;
			var sPath = fn; //assume we are in the right folder already
			var s = fs.statSync(sPath);
			if( s.mtime.getTime() > age ) {
				copyFile(fn);
			}
			//fs.access(fn, fs.constants.R_OK, err=> {
			//	console.log(`${fn} ${err}`);
			//});
			//console.log(`${sPath} ${s.mtime.getTime() > age}`);

		});
	}
};
